// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace TechnicalTest.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250423033718_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TechnicalTest.Models.ComCustomerModel", b =>
                {
                    b.Property<int>("ComCustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComCustomerId"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ComCustomerId");

                    b.ToTable("COM_CUSTOMER", (string)null);
                });

            modelBuilder.Entity("TechnicalTest.Models.SoItemModel", b =>
                {
                    b.Property<long>("SoItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SoItemId"));

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<long>("SoOrderId")
                        .HasColumnType("bigint");

                    b.HasKey("SoItemId");

                    b.HasIndex("SoOrderId");

                    b.ToTable("SO_ITEM", (string)null);
                });

            modelBuilder.Entity("TechnicalTest.Models.SoOrderModel", b =>
                {
                    b.Property<long>("SoOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SoOrderId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComCustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SoOrderId");

                    b.HasIndex("ComCustomerId");

                    b.ToTable("SO_ORDER", (string)null);
                });

            modelBuilder.Entity("TechnicalTest.Models.SoItemModel", b =>
                {
                    b.HasOne("TechnicalTest.Models.SoOrderModel", "SoOrder")
                        .WithMany("SoItems")
                        .HasForeignKey("SoOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SoOrder");
                });

            modelBuilder.Entity("TechnicalTest.Models.SoOrderModel", b =>
                {
                    b.HasOne("TechnicalTest.Models.ComCustomerModel", "ComCustomer")
                        .WithMany("SoOrders")
                        .HasForeignKey("ComCustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComCustomer");
                });

            modelBuilder.Entity("TechnicalTest.Models.ComCustomerModel", b =>
                {
                    b.Navigation("SoOrders");
                });

            modelBuilder.Entity("TechnicalTest.Models.SoOrderModel", b =>
                {
                    b.Navigation("SoItems");
                });
#pragma warning restore 612, 618
        }
    }
}
